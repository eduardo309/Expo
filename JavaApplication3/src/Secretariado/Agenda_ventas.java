/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Agenda_ventas.java
 *
 * Created on Jun 9, 2015, 10:34:22 PM
 */
package Secretariado;

import Secretariado.Lista_empleados;
import Clases.Secretaria;
import Clases.conexion;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jvnet.substance.SubstanceLookAndFeel;

public class Agenda_ventas extends javax.swing.JFrame {
    private Connection cn;

    public void limpiar(){
    txtCliente.setText(null); 
    txtCodClient.setText(null);
    txtCodProp.setText(null); 
    txtHora.setText(null);
    txtProp.setText(null); 
}
    public Agenda_ventas() {
        initComponents();
        setTitle("Agenda de ventas");
        setLocationRelativeTo(null);
        
        Secretaria clase = new Secretaria();
        clase.Lista_clientes();
        
        Secretaria clase2 = new Secretaria();
        clase2.Lista_propiedades();
        
        Secretaria clase3 = new Secretaria();
        clase3.Lista_agenda();
        
        this.getContentPane().setBackground(new java.awt.Color(0, 0, 102));
        
        lblNombre.setText(Lista_empleados.Nombre_emp);
        txtCodigo.setVisible(false);
        cmb();
        
    }
    
    private void actualizar(){
        DefaultTableModel modelo=(DefaultTableModel) tabla_agenda.getModel();
                    int filas=tabla_agenda.getRowCount();
                    for (int i = 0;filas>i; i++) {
                        modelo.removeRow(0);
                    }
                    Secretaria frm4 = new Secretaria();
                    frm4.Lista_agenda();
    }
    
    
    private void cmb(){
            try {
    conexion con = new conexion();
    cn = con.conexion();
    DefaultComboBoxModel dcm = new DefaultComboBoxModel();
    String sql = "select * from estado_AV";
    dcm.addElement("-Seleccione uno-");
    PreparedStatement cmd = cn.prepareStatement(sql);
    ResultSet rs = cmd.executeQuery();
    while(rs.next()){
        dcm.addElement(rs.getString("nombre_estadoAV"));
    }
    dcm.removeElementAt(2);
    dcm.removeElementAt(3); 
    cmd.close();
    cn.close();
    cmbEstado.setModel(dcm);
            }  catch(Exception ex){
            
        }
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_clientes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_propiedades = new javax.swing.JTable();
        txtHora = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtProp = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCodClient = new javax.swing.JTextField();
        txtCodProp = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbEstado = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_agenda = new javax.swing.JTable();
        txtCodigo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        dccFecha = new datechooser.beans.DateChooserCombo();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla_clientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombres", "Apellidos", "Telefono", "Correo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_clientes.getTableHeader().setReorderingAllowed(false);
        tabla_clientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_clientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_clientes);
        if (tabla_clientes.getColumnModel().getColumnCount() > 0) {
            tabla_clientes.getColumnModel().getColumn(0).setResizable(false);
            tabla_clientes.getColumnModel().getColumn(1).setResizable(false);
            tabla_clientes.getColumnModel().getColumn(2).setResizable(false);
            tabla_clientes.getColumnModel().getColumn(3).setResizable(false);
            tabla_clientes.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Lista de clientes");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Lista de propiedades");

        tabla_propiedades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Tipo de propiedad", "Ubicacion", "Dimension", "Descripcion", "Precio base"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_propiedades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_propiedadesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_propiedades);
        if (tabla_propiedades.getColumnModel().getColumnCount() > 0) {
            tabla_propiedades.getColumnModel().getColumn(0).setResizable(false);
            tabla_propiedades.getColumnModel().getColumn(1).setResizable(false);
            tabla_propiedades.getColumnModel().getColumn(2).setResizable(false);
            tabla_propiedades.getColumnModel().getColumn(3).setResizable(false);
            tabla_propiedades.getColumnModel().getColumn(4).setResizable(false);
            tabla_propiedades.getColumnModel().getColumn(5).setResizable(false);
        }

        txtHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("hh:mm a"))));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cliente:");

        txtCliente.setEditable(false);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Propiedad:");

        txtProp.setEditable(false);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Codigo:");

        txtCodClient.setEditable(false);

        txtCodProp.setEditable(false);

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Codigo:");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Fecha:");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Hora:");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Estado:");

        tabla_agenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "CodCliente", "Cliente", "CodProp", "Propiedad", "Fecha", "Hora", "CodEstado", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_agenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_agendaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabla_agenda);
        if (tabla_agenda.getColumnModel().getColumnCount() > 0) {
            tabla_agenda.getColumnModel().getColumn(0).setResizable(false);
            tabla_agenda.getColumnModel().getColumn(1).setResizable(false);
            tabla_agenda.getColumnModel().getColumn(2).setResizable(false);
            tabla_agenda.getColumnModel().getColumn(3).setResizable(false);
            tabla_agenda.getColumnModel().getColumn(4).setResizable(false);
            tabla_agenda.getColumnModel().getColumn(5).setResizable(false);
            tabla_agenda.getColumnModel().getColumn(6).setResizable(false);
            tabla_agenda.getColumnModel().getColumn(7).setResizable(false);
            tabla_agenda.getColumnModel().getColumn(8).setResizable(false);
        }

        txtCodigo.setEditable(false);

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("*La hora esta en formato: hh:mm a = 10:30 PM");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1434664469_edit-clear.png"))); // NOI18N
        jButton1.setText("Limpar campos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("nombre del empleado:");

        lblNombre.setText("nombre");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(lblNombre)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblNombre))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1434853539_go-back.png"))); // NOI18N
        jMenu2.setText("Regresar");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar2.add(jMenu2);

        jMenu1.setText("Archivo");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1434857547_001_45.png"))); // NOI18N
        jMenuItem3.setText("Modificar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1434841655_f-cross_256.png"))); // NOI18N
        jMenuItem4.setText("Eliminar");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1434608001_save_as-2.png"))); // NOI18N
        jMenuItem5.setText("Guardar");
        jMenuItem5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem5MouseClicked(evt);
            }
        });
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar2.add(jMenu1);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1004, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(90, 90, 90)
                                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                                .addComponent(txtProp, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addComponent(jLabel3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel6)
                                            .addComponent(txtCodClient, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                                            .addComponent(txtCodProp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)))
                                    .addComponent(txtHora, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                                    .addComponent(cmbEstado, 0, 226, Short.MAX_VALUE)
                                    .addComponent(dccFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel9))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCodClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtProp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodProp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(dccFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel1)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jButton1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel2)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
    Lista_empleados frm = new Lista_empleados();
        frm.show();
        this.show();
}//GEN-LAST:event_jMenu2MouseClicked

private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        
}//GEN-LAST:event_jMenu2ActionPerformed

private boolean validarCliente(){
    boolean resp = false;
    try{
       String sql = "Select id_agenda from Agenda_ventas where id_cliente = " + txtCodClient.getText() + " and Fecha = '" + dccFecha.getText() + "' and Hora = '" + txtHora.getText() + "' and id_estadoAV != 3 and id_estadoAV != 4"; 
       conexion con = new conexion();
       cn = con.conexion();
       PreparedStatement cmd = cn.prepareStatement(sql);
       ResultSet rs = cmd.executeQuery();
       if(rs.next()){
           resp = true;
           JOptionPane.showMessageDialog(this, "Lo siento pero este cliente ya tiene una cita esta fecha, por favor intentolo con otros datos");
       }
    }catch(Exception ex){ System.out.println(ex.getMessage());
    }
    
    return resp;
}

private boolean validarProp(){
    boolean resp = false;
    try{
       String sql = "Select id_agenda from Agenda_ventas where id_propiedad = " + txtCodProp.getText() + " and Fecha = '" + dccFecha.getText() + "' and Hora = '" + txtHora.getText() + "' and id_estadoAV != 3 and id_estadoAV != 4"; 
       conexion con = new conexion();
       cn = con.conexion();
       PreparedStatement cmd = cn.prepareStatement(sql);
       ResultSet rs = cmd.executeQuery();
       if(rs.next()){
           resp = true;
           JOptionPane.showMessageDialog(this, "Lo siento pero esta propiedad ya tiene una cita esta fecha, por favor intentolo con otros datos");
       }
       
    }catch(Exception ex){ System.out.println(ex.getMessage());
    }
    
    return resp;
}

private boolean validarEmpleado(){
    boolean resp = false;
    try{
       String sql = "Select id_agenda from Agenda_ventas where id_empleado = " + txtCodigo.getText() + " and Fecha = '" + dccFecha.getText() + "' and Hora = '" + txtHora.getText() + "' and id_estadoAV != 3 and id_estadoAV != 4"; 
       conexion con = new conexion();
       cn = con.conexion();
       PreparedStatement cmd = cn.prepareStatement(sql);
       ResultSet rs = cmd.executeQuery();
       if(rs.next()){
           resp = true;
           JOptionPane.showMessageDialog(this, "Lo siento pero este empleado ya tiene una cita esta fecha, por favor intentolo con otros datos");
       }
       
    }catch(Exception ex){ System.out.println(ex.getMessage());
    }
    
    return resp;
}

private boolean validarRepeticiones_alModificar(){
    boolean resp = false;
    try{
       String sql = "Select id_agenda from Agenda_ventas where id_propiedad = " + txtCodProp.getText() + " and id_cliente = " + txtCodClient.getText() + " and id_estadoAV != 3 and id_estadoAV != 4"; 
       conexion con = new conexion();
       cn = con.conexion();
       PreparedStatement cmd = cn.prepareStatement(sql);
       ResultSet rs = cmd.executeQuery();
       int ID = 0;
       if(rs.next()){
           if(!txtCodigo.getText().isEmpty()){
               ID = rs.getInt(1);
               if(ID != Integer.parseInt(txtCodigo.getText())){
                   resp = true;
                   JOptionPane.showMessageDialog(this, "Lo siento pero ya existe un registro con este cliente y esta propiedad");
               }
           }
       }
       
    }catch(Exception ex){ System.out.println(ex.getMessage());
    }
    
    return resp;
}

private boolean validarRepeticiones(){
    boolean resp = false;
    try{
       String sql = "Select id_agenda from Agenda_ventas where id_propiedad = " + txtCodProp.getText() + " and id_cliente = " + txtCodClient.getText() + " and id_estadoAV != 3 and id_estadoAV != 4"; 
       conexion con = new conexion();
       cn = con.conexion();
       PreparedStatement cmd = cn.prepareStatement(sql);
       ResultSet rs = cmd.executeQuery();
       if(rs.next()){
           resp = true;
           JOptionPane.showMessageDialog(this, "Lo siento pero este cliente ya tiene una cita con esta propiedad, \n intente mejor modificando la fecha de la cita para la que desea, esto es para que no se repitan mucho los datos");
       }
       
    }catch(Exception ex){ System.out.println(ex.getMessage());
    }
    
    return resp;
}



private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
   if(!txtCodClient.getText().isEmpty() && !txtCodProp.getText().isEmpty() && !txtHora.getText().isEmpty() && cmbEstado.getSelectedIndex() > 0 && !validarCliente() && !validarProp() && !validarEmpleado() && !validarRepeticiones()){
        Secretaria obj = new Secretaria();
        obj.setCodigo(Integer.parseInt(txtCodClient.getText()));
        obj.setUbicacion(txtCodProp.getText());
        obj.setFecha(dccFecha.getText().toString());
        System.out.println(obj.getFecha());
        obj.setHora(txtHora.getText());
        if(obj.Guardar_cita()){
            actualizar();
            JOptionPane.showMessageDialog(this, "Datos guardados correctamente");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Error al guardar datos");
        }
    }
    else
    {
        System.out.println("Khe");
    }
}//GEN-LAST:event_jMenuItem5ActionPerformed

private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
    if(!txtCodigo.getText().isEmpty() && !txtCodClient.getText().isEmpty() && !txtCodProp.getText().isEmpty() && !txtHora.getText().isEmpty() && cmbEstado.getSelectedIndex() > 0 && !validarCliente() && !validarEmpleado() && !validarProp() && !validarRepeticiones_alModificar()){
        Secretaria obj = new Secretaria();
        obj.setNombres(txtCodigo.getText());
        obj.setCodigo(Integer.parseInt(txtCodClient.getText()));
        obj.setUbicacion(txtCodProp.getText()); 
        obj.setFecha(dccFecha.getText().toString());
        System.out.println(obj.getFecha());
        obj.setHora(txtHora.getText());
        if(obj.Modificar_cita()){
            actualizar();
            JOptionPane.showMessageDialog(this, "Datos modificados correctamente");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Error al modificar datos");
        }
    }
    else
    {
        System.out.println("Khe");
    }
}//GEN-LAST:event_jMenuItem3ActionPerformed

private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed

}//GEN-LAST:event_jMenuItem4ActionPerformed

private void tabla_clientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_clientesMouseClicked
// TODO add your handling code here:
    Integer ID = (Integer) tabla_clientes.getValueAt(tabla_clientes.getSelectedRow(), 0);
    String Nombre = (String) tabla_clientes.getValueAt(tabla_clientes.getSelectedRow(), 2);
    
    txtCliente.setText(Nombre);
    txtCodClient.setText(ID.toString());
    
}//GEN-LAST:event_tabla_clientesMouseClicked

private void tabla_propiedadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_propiedadesMouseClicked
// TODO add your handling code here:
    Integer ID = (Integer) tabla_propiedades.getValueAt(tabla_propiedades.getSelectedRow(), 0);
    String Nombre = (String) tabla_propiedades.getValueAt(tabla_propiedades.getSelectedRow(), 2);
    
    txtProp.setText(Nombre);
    txtCodProp.setText(ID.toString());
}//GEN-LAST:event_tabla_propiedadesMouseClicked

private void jMenuItem5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem5MouseClicked
// TODO add your handling code here:
    
    
}//GEN-LAST:event_jMenuItem5MouseClicked

private void tabla_agendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_agendaMouseClicked
// TODO add your handling code here:
    Integer ID = (Integer) tabla_agenda.getValueAt(tabla_agenda.getSelectedRow(), 0);
    String ID_cliente = (String) tabla_agenda.getValueAt(tabla_agenda.getSelectedRow(), 1);
    String Nombre_C = (String) tabla_agenda.getValueAt(tabla_agenda.getSelectedRow(), 2);
    Integer ID_Prop = (Integer) tabla_agenda.getValueAt(tabla_agenda.getSelectedRow(), 3);
    String Nombre_P = (String) tabla_agenda.getValueAt(tabla_agenda.getSelectedRow(), 4);
    Date Fecha = (Date) tabla_agenda.getValueAt(tabla_agenda.getSelectedRow(), 5);
    String Hora = (String) tabla_agenda.getValueAt(tabla_agenda.getSelectedRow(), 6);
    String Estado = (String) tabla_agenda.getValueAt(tabla_agenda.getSelectedRow(), 8);
    
    txtCodigo.setText(ID.toString());
    txtCodClient.setText(ID_cliente);
    txtCliente.setText(Nombre_C);
    txtCodProp.setText(ID_Prop.toString());
    txtProp.setText(Nombre_P);
    txtHora.setText(Hora);
    dccFecha.setText(String.valueOf(Fecha)); 
    cmbEstado.setSelectedItem(Estado);
    
    
}//GEN-LAST:event_tabla_agendaMouseClicked

private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
// TODO add your handling code here:
    if(!txtCodigo.getText().isEmpty()) 
    {
        Secretaria obj = new Secretaria();
        obj.setCodigo(Integer.parseInt(txtCodigo.getText()));
        int eliminar = JOptionPane.showConfirmDialog(this, "Esta seguro que desea eliminar?", "Atencion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(eliminar == 0){
            if(obj.Eliminar_cita()){
                actualizar();
                JOptionPane.showMessageDialog(this, "Datos elminados con exito");
            }
            else{
                JOptionPane.showMessageDialog(this,"Error al intentar elminiar datos");
            }
        }
    }
}//GEN-LAST:event_jMenu1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       limpiar();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Agenda_ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Agenda_ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Agenda_ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Agenda_ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Agenda_ventas().setVisible(true);
                JFrame.setDefaultLookAndFeelDecorated(true);
        SubstanceLookAndFeel.setSkin("org.jvnet.substance.skin.MistAquaSkin");    //seaplica la libreria de look and feel
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JComboBox cmbEstado;
    private datechooser.beans.DateChooserCombo dccFecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblNombre;
    public static javax.swing.JTable tabla_agenda;
    public static javax.swing.JTable tabla_clientes;
    public static javax.swing.JTable tabla_propiedades;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtCodClient;
    private javax.swing.JTextField txtCodProp;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtHora;
    private javax.swing.JTextField txtProp;
    // End of variables declaration//GEN-END:variables
}
