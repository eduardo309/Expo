/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Recursos_Humanos;

import Clases.Empleados;
import Clases.Secretaria;
import Clases.conexion;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jvnet.substance.SubstanceLookAndFeel;
import ptc.Login;


/**
 *
 * @author oscar
 */
public class empleado extends javax.swing.JFrame {
    private Connection cn;

    /**
     * Creates new form empleado
     */
    public empleado() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Empleados");
        this.setResizable(false);
        this.getContentPane().setBackground(new java.awt.Color(0, 0, 102));
        comboBoxs();

        Empleados clase = new Empleados();
        clase.Empleados();      
        Sletras(txtNombres);
        Sletras(txtApellidos);
    }
    
    public void Sletras(JTextField a){
        a.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e){
            char c=e.getKeyChar();
            if(!Character.isLetter(c) && !Character.isSpaceChar(c)){
                getToolkit().beep();
                e.consume();
            }
        }
      
        });
    }
    
    public boolean Email(String email){
       Pattern pat = null;
       Matcher mat = null;
       pat = Pattern.compile("^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[a-zA-Z]{2,4}$");
        mat = pat.matcher(email);
        if(mat.find()){
            return true;
        }else{
            return false;
        }
    }
    
    private void recorrer(){
        int Cant = tabla_empleados.getRowCount();
        for(int i = 0; i <= Cant; i ++)
        {        
            try{
                
            } catch(Exception e){}
            
        }
    }
    
    private void comboBoxs(){
        try {
        conexion con = new conexion();
        cn = con.conexion();
        DefaultComboBoxModel dcm = new DefaultComboBoxModel();
        String sql = "select * from tipo_usuario";
        PreparedStatement cmd = cn.prepareStatement(sql);
        ResultSet rs = cmd.executeQuery();
        txtCodigo.setVisible(false); 
        while(rs.next()){
            cmbCargo.addItem(rs.getString(2)); 
        }
        cmd.close();
        cn.close();
    }
    catch (Exception ex){
        ex.getMessage();
    }
    }
    
    private void limpiar(){
        txtCodigo.setText(null);
        txtNombres.setText(null);
        txtApellidos.setText(null);
        txtAFP.setText(null);
        txtSueldo.setText(null);
        txtISSS.setText(null);
        txtnit.setText(null);
        txtdui.setText(null);
        txtcorreo.setText(null);
        txttelefono.setText(null);
        cmbEstado.setSelectedIndex(0);
        Tipo = "";
        cmbCargo.setSelectedIndex(0); 
        cmbCargo.setEnabled(true); 
    }
    
    
    private void actualizar(){
        DefaultTableModel modelo=(DefaultTableModel) tabla_empleados.getModel();
        int filas=tabla_empleados.getRowCount();
        for (int i = 0;filas>i; i++) {
            modelo.removeRow(0);
        }
        Empleados frm4 = new Empleados();
        frm4.Empleados();
        limpiar();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtSueldo = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtcorreo = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        cmbEstado = new javax.swing.JComboBox();
        cmbCargo = new javax.swing.JComboBox();
        txtISSS = new javax.swing.JFormattedTextField();
        txtAFP = new javax.swing.JFormattedTextField();
        txtdui = new javax.swing.JFormattedTextField();
        txtnit = new javax.swing.JFormattedTextField();
        txttelefono = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_empleados = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seleccione", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cargo:");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Sueldo");

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nombres");

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Apellidos");

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ISSS");

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("AFP");

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("DUI");

        jLabel9.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("NIT");

        jLabel10.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Telefono");

        jLabel11.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Correo");

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        txtSueldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSueldoActionPerformed(evt);
            }
        });

        txtNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombresActionPerformed(evt);
            }
        });

        txtcorreo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcorreoFocusLost(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Estado civil");

        cmbEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Seleccione uno-", "Casad@", "Solter@" }));

        cmbCargo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione el Cargo" }));
        cmbCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCargoActionPerformed(evt);
            }
        });

        try {
            txtISSS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtAFP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("############")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtdui.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("########-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtnit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-######-###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txttelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(txtSueldo)
                    .addComponent(cmbCargo, 0, 129, Short.MAX_VALUE))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtISSS, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                        .addComponent(txtApellidos, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtNombres, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAFP)
                    .addComponent(txtdui)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtnit, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel10))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txttelefono)
                            .addComponent(txtcorreo, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(16, 16, 16))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(7, 7, 7)
                        .addComponent(cmbCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jLabel10))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtAFP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txttelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel8))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtdui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtcorreo))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(17, 17, 17)
                            .addComponent(jLabel5)
                            .addGap(7, 7, 7)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(14, 14, 14)
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtISSS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        tabla_empleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Cargo", "Nombres", "Apellidos", "Sueldo", "ISSS", "AFP", "DUI", "NIT", "Telefono", "Correo", "Estado civil"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_empleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_empleadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_empleados);
        if (tabla_empleados.getColumnModel().getColumnCount() > 0) {
            tabla_empleados.getColumnModel().getColumn(0).setMinWidth(0);
            tabla_empleados.getColumnModel().getColumn(0).setMaxWidth(0);
            tabla_empleados.getColumnModel().getColumn(1).setResizable(false);
            tabla_empleados.getColumnModel().getColumn(2).setResizable(false);
            tabla_empleados.getColumnModel().getColumn(3).setResizable(false);
            tabla_empleados.getColumnModel().getColumn(4).setMinWidth(0);
            tabla_empleados.getColumnModel().getColumn(4).setMaxWidth(0);
            tabla_empleados.getColumnModel().getColumn(5).setMinWidth(0);
            tabla_empleados.getColumnModel().getColumn(5).setMaxWidth(0);
            tabla_empleados.getColumnModel().getColumn(6).setMinWidth(0);
            tabla_empleados.getColumnModel().getColumn(6).setMaxWidth(0);
            tabla_empleados.getColumnModel().getColumn(7).setResizable(false);
            tabla_empleados.getColumnModel().getColumn(8).setResizable(false);
            tabla_empleados.getColumnModel().getColumn(9).setResizable(false);
            tabla_empleados.getColumnModel().getColumn(10).setResizable(false);
            tabla_empleados.getColumnModel().getColumn(11).setMinWidth(0);
            tabla_empleados.getColumnModel().getColumn(11).setMaxWidth(0);
        }

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1434664469_edit-clear.png"))); // NOI18N
        jButton4.setText("Nuevo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1434841655_f-cross_256.png"))); // NOI18N
        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1434857547_001_45.png"))); // NOI18N
        jButton3.setText("Modificar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1434608001_save_as-2.png"))); // NOI18N
        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1434854150_exit.png"))); // NOI18N
        jMenu3.setText("Cerrar sesion");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1434853539_go-back.png"))); // NOI18N
        jMenu1.setText("Regresar");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Archivo");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Ver Historial de ventas");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombresActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void txtSueldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSueldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSueldoActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        PrincipalRecursos frm = new PrincipalRecursos();
        frm.show();
        this.hide();
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed

    }//GEN-LAST:event_jMenu1ActionPerformed

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
// TODO add your handling code here:
}//GEN-LAST:event_formWindowOpened

private boolean ValidarISS(){
    boolean resp = false;
    if(!txtISSS.getText().isEmpty())
    {
        try {
            conexion con = new conexion();
            cn = con.conexion();
            int ID = 0;
            PreparedStatement cmd = cn.prepareStatement("Select * from empleado where ISS = '" + txtISSS.getText() + "'");
            ResultSet rs = cmd.executeQuery();
            if(rs.next())
            {
                if(!txtCodigo.getText().isEmpty()){
                    ID = rs.getInt(1);
                if(ID != Integer.parseInt(txtCodigo.getText()))
                {
                    resp = true;
                    JOptionPane.showMessageDialog(this, "El Numero de ISSS ingresado ya existe, por favor intente con otro");
                    txtISSS.setText(null);
                }
                }
                else
                {
                    resp = true;
                    JOptionPane.showMessageDialog(this, "El Numero de ISSS ingresado ya existe, por favor intente con otro");
                    txtISSS.setText(null);
                }
            }
            cmd.close();
            cn.close();
            
            } catch (SQLException ex) {
                ex.getMessage();
            }
    }
    return resp;
}

private boolean ValidarAFP(){
    boolean resp = false;
    if(!txtAFP.getText().isEmpty())
    {
        try {
            conexion con = new conexion();
            cn = con.conexion();
            int ID = 0;
            PreparedStatement cmd = cn.prepareStatement("Select * from empleado where AFP = '" + txtAFP.getText() + "'");
            ResultSet rs = cmd.executeQuery();
            if(rs.next())
            {
                if(!txtCodigo.getText().isEmpty()){
                    ID = rs.getInt(1);
                if(ID != Integer.parseInt(txtCodigo.getText()))
                {
                    resp = true;
                    JOptionPane.showMessageDialog(this, "El Numero de AFP ingresado ya existe, por favor intente con otro");
                    txtAFP.setText(null);
                }
                }
                else
                {
                    resp = true;
                    JOptionPane.showMessageDialog(this, "El Numero de AFP ingresado ya existe, por favor intente con otro");
                    txtAFP.setText(null);
                }
            }
            cmd.close();
            cn.close();
            
            } catch (SQLException ex) {
                ex.getMessage();
            }
    }
    return resp;
}

private boolean ValidarDUI(){
    boolean resp = false;
    if(!txtdui.getText().isEmpty())
    {
        try {
            conexion con = new conexion();
            cn = con.conexion();
            int ID = 0;
            PreparedStatement cmd = cn.prepareStatement("Select * from empleado where DUI = '" + txtdui.getText() + "'");
            ResultSet rs = cmd.executeQuery();
            if(rs.next())
            {
                if(!txtCodigo.getText().isEmpty()){
                    ID = rs.getInt(1);
                if(ID != Integer.parseInt(txtCodigo.getText()))
                {
                    resp = true;
                    JOptionPane.showMessageDialog(this, "El DUI ingresado ya existe, por favor intente con otro");
                    txtdui.setText(null);
                }
                }
                else
                {
                    resp = true;
                    JOptionPane.showMessageDialog(this, "El DUI ingresado ya existe, por favor intente con otro");
                    txtdui.setText(null);
                }
                
            }
            cmd.close();
            cn.close();
            
            } catch (SQLException ex) {
                ex.getMessage();
            }
    }
    return resp;
}

private boolean ValidarNIT(){
    boolean resp = false;
    if(!txtnit.getText().isEmpty())
    {
        try {
            conexion con = new conexion();
            int ID = 0;
            cn = con.conexion();
            PreparedStatement cmd = cn.prepareStatement("Select * from empleado where NIT = '" + txtnit.getText() + "'");
            ResultSet rs = cmd.executeQuery();
            if(rs.next())
            {
                if(!txtCodigo.getText().isEmpty()){
                    ID = rs.getInt(1);
                if(ID != Integer.parseInt(txtCodigo.getText()))
                {
                    resp = true;
                    JOptionPane.showMessageDialog(this, "El NIT ingresado ya existe, por favor intente con otro");
                    txtnit.setText(null);
                }
                }
                else
                {
                    resp = true;
                    JOptionPane.showMessageDialog(this, "El NIT ingresado ya existe, por favor intente con otro");
                    txtnit.setText(null);
                }
                
                
            }
            cmd.close();
            cn.close();
            
            } catch (SQLException ex) {
                ex.getMessage();
            }
    }
    return resp;
}

private boolean ValidarTelefono(){
    boolean resp = false;
    if(!txttelefono.getText().isEmpty())
    {
        try {
            conexion con = new conexion();
            cn = con.conexion();
            int ID = 0;
            PreparedStatement cmd = cn.prepareStatement("Select * from empleado where telefono_emp = '" + txttelefono.getText() + "'");
            ResultSet rs = cmd.executeQuery();
            if(rs.next())
            {
                if(!txtCodigo.getText().isEmpty()){
                    ID = rs.getInt(1);
                if(ID != Integer.parseInt(txtCodigo.getText()))
                {
                    resp = true;
                    JOptionPane.showMessageDialog(this, "El Telefono ingresado ya existe, por favor intente con otro");
                    txttelefono.setText(null);
                }
                }
                else
                {
                    resp = true;
                    JOptionPane.showMessageDialog(this, "El Telefono ingresado ya existe, por favor intente con otro");
                    txttelefono.setText(null);
                }
            }
            cmd.close();
            cn.close();
            
            } catch (SQLException ex) {
                ex.getMessage();
            }
    }
    return resp;
}

private boolean ValidarCorreo(){
    boolean resp = false;
    if(!txtcorreo.getText().isEmpty())
    {
        try {
            conexion con = new conexion();
            cn = con.conexion();
            int ID = 0;
            PreparedStatement cmd = cn.prepareStatement("Select * from empleado where correo_emp = '" + txtcorreo.getText() + "'");
            ResultSet rs = cmd.executeQuery();
            if(rs.next())
            {
                if(!txtCodigo.getText().isEmpty()){
                    ID = rs.getInt(1);
                if(ID != Integer.parseInt(txtCodigo.getText()))
                {
                    resp = true;
                    JOptionPane.showMessageDialog(this, "El Correo ingresado ya existe, por favor intente con otro");
                    txtcorreo.setText(null);
                }
                }
                else
                {
                    resp = true;
                    JOptionPane.showMessageDialog(this, "El Correo ingresado ya existe, por favor intente con otro");
                    txtcorreo.setText(null);
                }
            }
            else
            {
                if(Email(txtcorreo.getText())){
                    System.out.println("Correcto");
                }
                else{
                    JOptionPane.showMessageDialog(this, "Por favor escriba su correo de forma correcta");
                    txtcorreo.setText(null);
                }

            }
            cmd.close();
            cn.close();
            
            } catch (SQLException ex) {
                ex.getMessage();
            }
    }
    return resp;
}

private static String Tipo = "";
private void tabla_empleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_empleadosMouseClicked
// TODO add your handling code here:
    cmbCargo.setEnabled(false); 
    Integer ID = (Integer) tabla_empleados.getValueAt(tabla_empleados.getSelectedRow(), 0);
    String Cargo = (String) tabla_empleados.getValueAt(tabla_empleados.getSelectedRow(), 1);
    String Nombres = (String) tabla_empleados.getValueAt(tabla_empleados.getSelectedRow(), 2);
    String Apellidos = (String) tabla_empleados.getValueAt(tabla_empleados.getSelectedRow(), 3);
    Double Sueldo = (Double) tabla_empleados.getValueAt(tabla_empleados.getSelectedRow(), 4);
    Integer ISSS = (Integer) tabla_empleados.getValueAt(tabla_empleados.getSelectedRow(), 5);
    String AFP = (String) tabla_empleados.getValueAt(tabla_empleados.getSelectedRow(), 6);
    String DUI = (String) tabla_empleados.getValueAt(tabla_empleados.getSelectedRow(), 7);
    String NIT = (String) tabla_empleados.getValueAt(tabla_empleados.getSelectedRow(), 8);
    String Telefono = (String) tabla_empleados.getValueAt(tabla_empleados.getSelectedRow(), 9);
    String Correo = (String) tabla_empleados.getValueAt(tabla_empleados.getSelectedRow(), 10);
    String Estado = (String) tabla_empleados.getValueAt(tabla_empleados.getSelectedRow(), 11);
    
    if("Casado".equals(Estado)){
        cmbEstado.setSelectedIndex(1); 
    }
    else{
        cmbEstado.setSelectedIndex(2); 
    }
    
    txtCodigo.setText(ID.toString());
    cmbCargo.setSelectedItem(Cargo);
    Tipo = cmbCargo.getSelectedItem().toString();
    txtNombres.setText(Nombres);
    txtApellidos.setText(Apellidos);
    txtSueldo.setText(String.valueOf(Sueldo.toString()));
    txtISSS.setText(ISSS.toString());
    txtAFP.setText(String.valueOf(AFP)); 
    txtdui.setText(DUI);
    txtnit.setText(NIT);
    txttelefono.setText(Telefono);
    txtcorreo.setText(Correo);
    cmbEstado.setSelectedItem(Estado); 
    
}//GEN-LAST:event_tabla_empleadosMouseClicked

private void txtcorreoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcorreoFocusLost
// TODO add your handling code here:
    if(!txtcorreo.getText().isEmpty())
    {
        try {
            conexion con = new conexion();
            cn = con.conexion();
            int ID = 0;
            PreparedStatement cmd = cn.prepareStatement("Select * from empleado where correo_emp = '" + txtcorreo.getText() + "'");
            ResultSet rs = cmd.executeQuery();
            if(rs.next())
            {
                if(!txtCodigo.getText().isEmpty()){
                    ID = rs.getInt(1);
                if(ID != Integer.parseInt(txtCodigo.getText()))
                {
                    JOptionPane.showMessageDialog(this, "El Correo ingresado ya existe, por favor intente con otro");
                    txtcorreo.setText(null);
                }
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "El Correo ingresado ya existe, por favor intente con otro");
                    txtcorreo.setText(null);
                }
            }
            else
            {
                if(Email(txtcorreo.getText())){
                    System.out.println("Correcto");
                }
                else{
                    JOptionPane.showMessageDialog(this, "Por favor escriba su correo de forma correcta");
                    txtcorreo.setText(null);
                }

            }
            cmd.close();
            cn.close();
            
            } catch (SQLException ex) {
                ex.getMessage();
            }
    }
}//GEN-LAST:event_txtcorreoFocusLost

private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
// TODO add your handling code here:
    if(!txtCodigo.getText().isEmpty() && Tipo.equals("Vendedor")){
        
        Secretaria.ID_emp = Integer.parseInt(txtCodigo.getText());
        Comisiones frm = new Comisiones();
        frm.lblNombre.setText(txtNombres.getText());
        frm.show();
        this.hide();
    }
    else
    {
        JOptionPane.showMessageDialog(this, "Por favor asegurece de seleccionar un empleado y que este sea tipo(tipo de usuario) vendedor");
    }
}//GEN-LAST:event_jMenuItem1ActionPerformed

    private void cmbCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCargoActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        Login frm = new Login();
        frm.show();
        this.hide();
    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    if(!txtNombres.getText().isEmpty() && !txtApellidos.getText().isEmpty() && !txtSueldo.getText().isEmpty() && !txtISSS.getText().isEmpty() && !txtAFP.getText().isEmpty() && !txtdui.getText().isEmpty() && !txtnit.getText().isEmpty() && !txttelefono.getText().isEmpty() && !txtcorreo.getText().isEmpty() && cmbEstado.getSelectedIndex() > 0 && !ValidarISS() && !ValidarAFP() && !ValidarDUI() && !ValidarNIT() && !ValidarTelefono() && !ValidarCorreo()){

        {
        Empleados obj = new Empleados();
        obj.setNombres(txtNombres.getText());
        obj.setAFP((txtAFP.getText()));
        obj.setISSS(Integer.parseInt(txtISSS.getText()));
        obj.setApellidos(txtApellidos.getText());
        obj.setEstadoCivil(cmbEstado.getSelectedItem().toString());
        obj.setSueldo(Double.parseDouble(txtSueldo.getText()));
        obj.setDUI(txtdui.getText());
        obj.setTelefono(txttelefono.getText());
        obj.setCorreo(txtcorreo.getText());
        obj.setNIT(txtnit.getText());
        if(obj.guardar_empleado()){
            actualizar();
            recorrer();
            JOptionPane.showMessageDialog(this, "Datos guardados con exito");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Error al guardar datos, asegurece de que no haya ningun dato repetido y vuelva a intentarlo");
        }
        
        
    }
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    if(!txtCodigo.getText().isEmpty() && !txtNombres.getText().isEmpty() && !txtApellidos.getText().isEmpty() && !txtSueldo.getText().isEmpty() && !txtISSS.getText().isEmpty() && !txtAFP.getText().isEmpty() && !txtdui.getText().isEmpty() && !txtnit.getText().isEmpty() && !txttelefono.getText().isEmpty() && !txtcorreo.getText().isEmpty() && cmbEstado.getSelectedIndex() > 0 && !ValidarISS() && !ValidarAFP() && !ValidarDUI() && !ValidarNIT() && !ValidarTelefono() && !ValidarCorreo()){
        Empleados obj = new Empleados();
        obj.setID(Integer.parseInt(txtCodigo.getText()));
        obj.setNombres(txtNombres.getText());
        obj.setAFP((txtAFP.getText()));
        obj.setISSS(Integer.parseInt(txtISSS.getText()));
        obj.setApellidos(txtApellidos.getText());
        obj.setEstadoCivil(cmbEstado.getSelectedItem().toString());
        obj.setSueldo(Double.parseDouble(txtSueldo.getText()));
        obj.setDUI(txtdui.getText());
        obj.setTelefono(txttelefono.getText());
        obj.setCorreo(txtcorreo.getText());
        obj.setNIT(txtnit.getText());
        if(obj.modificar_empleado()){
            actualizar();
            recorrer();
            JOptionPane.showMessageDialog(this, "Datos Modificados con exito");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Error al Modificar datos, asegurece de que no haya algun dato repetido e intentelo de nuevo");
        }
        
        
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    if(!txtCodigo.getText().isEmpty()){
        Empleados obj = new Empleados();
        obj.setCodigo(Integer.parseInt(txtCodigo.getText()));
        int eliminar = JOptionPane.showConfirmDialog(this, "¿Esta seguro que desea eliminar los datos?", "Atencion",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(eliminar == 0)
        {
            if(obj.eliminar_empleado())
            {
                actualizar();
                comboBoxs();
                recorrer();
                JOptionPane.showMessageDialog(this, "Datos Eliminados");
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Error al eliminar los datos");
            }
        }
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        limpiar();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame.setDefaultLookAndFeelDecorated(true);
        SubstanceLookAndFeel.setSkin("org.jvnet.substance.skin.MistAquaSkin");    //seaplica la libreria de look and feel
                new empleado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JComboBox cmbCargo;
    private javax.swing.JComboBox cmbEstado;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tabla_empleados;
    private javax.swing.JFormattedTextField txtAFP;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtISSS;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtSueldo;
    private javax.swing.JTextField txtcorreo;
    private javax.swing.JFormattedTextField txtdui;
    private javax.swing.JFormattedTextField txtnit;
    private javax.swing.JFormattedTextField txttelefono;
    // End of variables declaration//GEN-END:variables
}
